//template routine Java
package routines;

import java.util.HashMap;
import java.util.Map;

/*
 * user specification:
 * the function's comment should contain keys as follows:
 * 1. write about the function's comment.but it must be before the "{talendTypes}" key.
 * 
 * 2. {talendTypes} 's value must be talend Type, it is required . its value should be one of:
 *                                               String, 
 *                                               char | Character, 
 *                                               long | Long, 
 *                                               int | Integer,
 *                                               boolean | Boolean,
 *                                               byte | Byte,
 *                                               Date,
 *                                               double | Double,
 *                                               float | Float,
 *                                               Object,
 *                                               short | Short
 * 
 * 3. {Category} define a category for the Function.  it is required. its value is user-defined .
 * 
 * 4. {param} 's format is: {param} <type>[(<default value or closed list values>)] <name>[ : <comment>]
 * 
 *      <type> 's value should be one of:
 *                  string,
 *                  int,
 *                  list,
 *                  double,
 *                  object,
 *                  boolean,
 *                  long,
 *                  char,
 *                  date.
 *      <name>'s value is the Function's parameter name.
 *  the {param} is optional. so if you the Function without the parameters. the {param} don't added.
 *  you can have many parameters for the Function.     
 * 
 * 5. {example} gives a example for the Function. it is optional.
 */
public class VarMap {
	
	static private Map<Object, Object> map1 = new HashMap<Object, Object> ();
	static private Map<Object, Object> map2 = new HashMap<Object, Object> ();
    
    /**
     * putValue: Put value in map.
     * 
     * 
     * {talendTypes} String
     * 
     * {Category} User Defined
     * 
     * {param} string("map1") input: The selector
     * {param} object(key) input: The key
     * {param} object(value) input: The value
     * 
     * {example} putValue("map1", key, value)
     */
    public static String putValue(String aSelector, Object aKey, Object aValue) {
    	if (aSelector.equalsIgnoreCase("map1")) {
    		map1.put(aKey, aValue);
    	}
    	else if (aSelector.equalsIgnoreCase("map2")) {
    		map2.put(aKey, aValue);
    	}
    	return(null);
    }
    
    /**
     * getValue: Get value in map.
     * 
     * 
     * {talendTypes} Object
     * 
     * {Category} User Defined
     * 
     * {param} string("map1") input: The selector
     * {param} object(key) input: The key
     * 
     * {example} getValue("map1", key)
     */
    public static void getValue(String aSelector, Object aKey) {
    	if (aSelector.equalsIgnoreCase("map1")) {
    		map1.get(aKey);
    	}
    	else if (aSelector.equalsIgnoreCase("map2")) {
    		map2.get(aKey);
    	}
    }

    /**
     * clear: Clear map.
     * 
     * 
     * {talendTypes} String
     * 
     * {Category} User Defined
     * 
     * {param} string("map1") input: The selector
     * 
     * {example} clear("map1")
     */
    public static void clear(String aSelector) {
    	if (aSelector.equalsIgnoreCase("map1")) {
    		map1.clear();
    	}
    	else if (aSelector.equalsIgnoreCase("map2")) {
    		map2.clear();
    	}
    }
    
}
